name: .NET

on:
  workflow_dispatch:
  push:
    branches:
      - "*"  
  schedule:
    - cron: '*/15 * * * *'

jobs:
  Download:
    name: "Download and Install (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        version: [ 2012, 2015, 2017, 2019, 2022 ]        
        format: [ json, yaml ]
        spec: [ 2.0, 3.0, 3.1 ]
        dotnet: [ 6.0, 8.0 ]
        os: [
          ubuntu-20.04,
          ubuntu-22.04,
          ubuntu-24.04,
          ubuntu-latest,
          # macos-12,
          # macos-13,
          # macos-12-xl,
          # macos-13-xl,
          # windows-2019,
          # windows-2022,
          # windows-latest
        ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET versions
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      # - name: Run tests
      #   working-directory: dotnet
      #   continue-on-error: true
      #   run: |
      #     dotnet build
      #     ./bin/Debug/net6.0/playwright.ps1 install
      #     dotnet test -c Release -- NUnit.NumberOfTestWorkers=5

      # - name: Install VSIX 2019
      #   run: Start-Process -FilePath 'C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/VSIXInstaller.exe' -ArgumentList '/q 0_vs2019.vsix' -Wait
      #   working-directory: dotnet/bin/Debug/net6.0
      #   if: ${{ matrix.os == 'windows-2019' }}

      # - name: Install VSIX 2022
      #   run: Start-Process -FilePath 'C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/VSIXInstaller.exe' -ArgumentList '/q 0_vs2022.vsix' -Wait
      #   working-directory: dotnet/bin/Debug/net6.0
      #   if: ${{ matrix.os == 'windows-2022' }}

      # - name: Install ResW Code Generator (2019)
      #   run: Start-Process -FilePath 'C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/VSIXInstaller.exe' -ArgumentList '/q 0_ResWFileCodeGenerator.vsix' -Wait
      #   working-directory: dotnet/bin/Debug/net6.0
      #   if: ${{ matrix.os == 'windows-2019' }}

      # - name: Install ResW Code Generator (2022)
      #   run: Start-Process -FilePath 'C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/VSIXInstaller.exe' -ArgumentList '/q 0_ResWFileCodeGenerator.vsix' -Wait
      #   working-directory: dotnet/bin/Debug/net6.0
      #   if: ${{ matrix.os == 'windows-2022' }}

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install Requirements from PyPi
        run: pip install autofaker

      #- name: Build
      #  continue-on-error: true
      #  run: |
      #    dotnet new console -n sampleproj
      #    cd sampleproj
      #    dotnet add package Refitter.SourceGenerator
      #    dotnet restore

      - name: Setup .NET versions
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
        continue-on-error: true

      - name: Install refitter
        run: |
          dotnet tool install --global refitter
        continue-on-error: true

      #- name: Install rapicgen
      #  run: |
      #    dotnet tool install --global rapicgen
      #  continue-on-error: true

      #- name: Install httpgenerator
      #  run: |
      #    dotnet tool install --global httpgenerator
      #  continue-on-error: true

      #- name: Install curlgenerator
      #  run: |
      #    dotnet tool install --global curlgenerator
      #  continue-on-error: true
